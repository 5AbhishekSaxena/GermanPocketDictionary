// Generated by Dagger (https://dagger.dev).
package com.abhishek.germanPocketDictionary.ui.splash;

import com.abhishek.germanPocketDictionary.ui.agreement.domain.repository.AgreementRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashViewModel_Factory implements Factory<SplashViewModel> {
  private final Provider<AgreementRepository> agreementRepositoryProvider;

  public SplashViewModel_Factory(Provider<AgreementRepository> agreementRepositoryProvider) {
    this.agreementRepositoryProvider = agreementRepositoryProvider;
  }

  @Override
  public SplashViewModel get() {
    return newInstance(agreementRepositoryProvider.get());
  }

  public static SplashViewModel_Factory create(
      Provider<AgreementRepository> agreementRepositoryProvider) {
    return new SplashViewModel_Factory(agreementRepositoryProvider);
  }

  public static SplashViewModel newInstance(AgreementRepository agreementRepository) {
    return new SplashViewModel(agreementRepository);
  }
}
